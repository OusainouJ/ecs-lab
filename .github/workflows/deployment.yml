name: Deploy to AWS

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    outputs:
      ecr_repo: ${{ steps.terraform.outputs.ecr_repository_url }}
      ecs_cluster: ${{ steps.terraform.outputs.ecs_cluster_name }}
      ecs_service: ${{ steps.terraform.outputs.ecs_service_name }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

  push-image:
    name: Build & Push Docker Image
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Amazon ECR
        run: aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${{ needs.terraform.outputs.ecr_repo }}

      - name: Build Docker Image
        run: docker build -t ${{ needs.terraform.outputs.ecr_repo }}:latest .

      - name: Push Docker Image to ECR
        run: docker push ${{ needs.terraform.outputs.ecr_repo }}:latest

  deploy-ecs:
    name: Deploy to ECS
    needs: push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ needs.terraform.outputs.ecs_cluster }} --service ${{ needs.terraform.outputs.ecs_service }} --force-new-deployment
